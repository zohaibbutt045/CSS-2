// notes
// [class^="col-"]

@import "../abstract/variables";
@import "../abstract/mixins";

.row {
    max-width: $grid-width; // max-width will maintain a responsive width and 1140px is a standard width for grids
    // background-color: #eee;
    margin: 0 auto !important; // trick to center the block elements -- inside another block element

    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
        // &:last-child means to pick last child
        // &:not(:last-child) means to pick everything except last child

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small !important;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix; // for floats

    [class^="col-"] {
        // any class attribute starting with col- will be selected with ^ tag
        // with $ tag .. we can have vice versa
        // class was used instead of className
        // background-color: orangered;
        float: left !important;
        // with float left -- 2 content in 2 rows will come in a single row // float right b aisa e kuchh krti
        // to use float left -- we have to do a clearfix --- in a mixin

        &:not(:last-child) {
            margin-right: $gutter-horizontal !important;
            // in order to have margin right -- after everyone except every last child of row

            @include respond(tab-port) {
                margin-right: 0; // bcoz every child will become a row in small screen
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
        // we want width of .col-1-of-2 to be -- 100% - space between 2 cols and then /2 -- in order to have another part of that column
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
        // bcz there are 3 of tiles ...
        // every tile with this class will have same width
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-3 {
        // it means 2 parts of a 3 part row
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}
